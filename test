@Test
void testWrite_CallsBuildBoundStatementAndExecutesSuccessfully() throws InterruptedException {
    // Mocking the aggregate and its dependencies
    AggregateFactory.Aggregate aggregate = mock(AggregateFactory.Aggregate.class);
    AggregateFactory.Table table = mock(AggregateFactory.Table.class);
    AggregateFactory.Columns column = mock(AggregateFactory.Columns.class);
    AggregateFactory.Metadata metadata = mock(AggregateFactory.Metadata.class);

    // Set up the table and column mocks
    when(aggregate.table()).thenReturn(table);
    when(table.name()).thenReturn("affiliateAccountBalance");
    when(table.columns()).thenReturn(Arrays.asList(column)); // Assuming you have columns
    when(column.name()).thenReturn("affiliateAccountId");
    when(column.metadata()).thenReturn(metadata);
    when(metadata.value()).thenReturn("someValue");

    // Mock the BoundStatement and other dependencies
    PreparedStatement preparedStatement = mock(PreparedStatement.class);
    BoundStatement boundStatement = mock(BoundStatement.class);

    when(session.prepare(any(SimpleStatement.class))).thenReturn(preparedStatement);
    when(preparedStatement.bind()).thenReturn(boundStatement);

    // Create a chunk of items
    Chunk<AggregateFactory.Aggregate> chunk = new Chunk<>(Arrays.asList(aggregate));

    // Invoke the write method
    cassandraItemWriter.write(chunk);

    // Verify that the session.executeAsync() method was called with the expected BoundStatement
    verify(session, times(1)).executeAsync(boundStatement);

    // Additional assertions to verify the BoundStatement's state
    assertNotNull(boundStatement);
}

















@Test
void testBuildBoundStatement() {
    // Mocking the aggregate and its dependencies
    AggregateFactory.Aggregate aggregate = mock(AggregateFactory.Aggregate.class);
    AggregateFactory.Table table = mock(AggregateFactory.Table.class);
    AggregateFactory.Columns column = mock(AggregateFactory.Columns.class);
    
    // Setting up the table and column mocks
    when(aggregate.table()).thenReturn(table);
    when(table.name()).thenReturn("affiliateAccountBalance");
    when(table.columns()).thenReturn(Arrays.asList(column));  // Assuming you have columns

    PreparedStatement preparedStatement = mock(PreparedStatement.class);
    BoundStatement boundStatement = mock(BoundStatement.class);

    // Setting up the session mock
    when(session.prepare(any(SimpleStatement.class))).thenReturn(preparedStatement);
    when(preparedStatement.bind()).thenReturn(boundStatement);

    // Now invoking the method under test
    BoundStatement result = ReflectionTestUtils.invokeMethod(cassandraItemWriter, "buildBoundStatement", aggregate);

    // Assert that the result is not null
    assertNotNull(result, "The buildBoundStatement method returned null when it was expected to return a non-null BoundStatement.");
}