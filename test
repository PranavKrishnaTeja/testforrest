import static org.mockito.Mockito.*;

@BeforeEach
void setUp() {
    MockitoAnnotations.openMocks(this);

    // Mock LogRecordCreator
    LogRecordCreator logRecordCreator = mock(LogRecordCreator.class);

    // Mock other dependencies as before
    CqlSession session = mock(CqlSession.class);
    CassandraConfig cassandraConfig = mock(CassandraConfig.class);

    // Inject mocks into CassandraItemWriter
    cassandraItemWriter = new CassandraItemWriter(session, cassandraConfig);
    ReflectionTestUtils.setField(cassandraItemWriter, "logRecordCreator", logRecordCreator);

    // Set up other required mocks
    when(cassandraConfig.maxConcurrentWriteRequests()).thenReturn(10);
}

@Test
void testWrite_SetsLastUpdatedTimestampAndExecutesSuccessfully() throws InterruptedException {
    // Your existing test setup...

    // Verify logRecordCreator was called
    verify(logRecordCreator, atLeastOnce()).toOutBound(anyString(), anyString(), any(LocalDateTime.class), anyMap(), any(Exception.class), any(ServiceCallType.class), anyString(), anyString(), anyString(), anyLong());
}