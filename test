public boolean shouldSkipForDelimitedLine(String schemaName, String[] tokens) {
    SchemaMapping schemaMapping = schemaConfigProperties.getMappingDetails().get(schemaName);
    if (schemaMapping == null) return false;
    SkipPolicy skipPolicy = schemaMapping.getSkipPolicy();
    if (skipPolicy == null || CollectionUtils.isEmpty(skipPolicy.getSkipRowsWithFieldValues())) {
        return false;
    }

    Map<String, FieldSkipPolicy> fieldSkipPolicyMap = skipPolicy.getSkipRowsWithFieldValues();
    List<FieldMapping> fieldMappings = schemaMapping.getFieldMappingList();

    return fieldMappings.stream()
        .filter(fieldMapping -> fieldSkipPolicyMap.containsKey(fieldMapping.getName()))
        .map(fieldMapping -> {
            Integer index = fieldMapping.getIndex();
            if (index == null || index >= tokens.length) return null;
            String fieldValue = tokens[index].trim();
            FieldSkipPolicy fieldSkipPolicy = fieldSkipPolicyMap.get(fieldMapping.getName());
            return conditionMatchesForField(fieldSkipPolicy, fieldValue);
        })
        .filter(Objects::nonNull)
        .anyMatch(Boolean::booleanValue);
}