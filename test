{
  "type": "record",
  "name": "AffiliateAccountBalances",
  "fields": [
    {"name": "afltAcctId", "type": "string"},
    {"name": "afltAcctCmpyCd", "type": "string"},
    {"name": "acctStatusCd", "type": "string"},
    {"name": "acctSvcOnlyInd", "type": "string"},
    {"name": "acctTypeCd", "type": "string"},
    {"name": "acctName", "type": "string"},
    {"name": "sponsorNm", "type": "string"},
    {"name": "unavailAssetAmt", "type": "bytes", "logicalType": "decimal", "precision": 8, "scale": 2},
    {"name": "availAssetAmt", "type": "bytes", "logicalType": "decimal", "precision": 8, "scale": 2},
    {"name": "acctOblgAmt", "type": "bytes", "logicalType": "decimal", "precision": 8, "scale": 2},
    {"name": "maxOblgAmt", "type": "bytes", "logicalType": "decimal", "precision": 8, "scale": 2},
    {"name": "acctOpenDt", "type": "string"},
    {"name": "reltAcctId", "type": "string"},
    {"name": "reltAcctCmpyCd", "type": "string"},
    {"name": "dataOriginTs", "type": "string"},
    {"name": "internalOwnerId", "type": "string"},
    {"name": "acctNoteDescTx", "type": "string"}
  ]
}

















package com.schwab.cdt.spos.source.job.step.reader;

import com.schwab.cdt.spos.source.spos.SposStreamingClient;
import org.apache.avro.generic.GenericRecord;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.ActiveProfiles;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.mock;

@SpringBootTest
@ActiveProfiles("test")
@Import({SposItemReader.class})
public class SposItemReaderTest {

    @Autowired
    private SposItemReader sposItemReader;

    private SposStreamingClient sposStreamingClient;
    private ExecutionContext executionContext;

    @BeforeEach
    public void setUp() throws IOException {
        this.sposStreamingClient = mock(SposStreamingClient.class);
        this.executionContext = new ExecutionContext();
        this.sposItemReader = new SposItemReader(sposStreamingClient, "sample-affiliate-account-balances.avro");
        sposItemReader.open(executionContext);
    }

    @Test
    public void testSposItemReader() throws Exception {
        GenericRecord record = sposItemReader.read();
        assertNotNull(record);
        // Add more assertions based on the expected fields and values in the record
    }
}
