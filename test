@Override
public GenericData.Record createAvroRecordFromPayload(String payload, FileUploadRequest fileUploadRequest, Schema avroSchema) {
    SchemaMapping schemaMapping = getAndValidateSchemaMapping(fileUploadRequest.getSourceSchemaName());

    String[] tokens = payload.split(Pattern.quote(schemaMapping.getDelimiter().getSymbol()));

    // Trim tokens to remove extra whitespace
    for (int i = 0; i < tokens.length; i++) {
        tokens[i] = tokens[i].trim();
    }

    // Check if the row should be skipped
    if (filteringService.shouldSkipForDelimitedLine(fileUploadRequest.getSourceSchemaName(), Arrays.asList(tokens))) {
        return null; // Skip this record
    }

    if (tokens.length > schemaMapping.getFieldMappingList().size()) {
        throw new AvroRecordGenerationException("Expected number of fields: " + schemaMapping.getFieldMappingList().size() + ", actual: " + tokens.length);
    }

    return writeRecord(avroSchema, schemaMapping, tokens);
}












public boolean shouldSkipForDelimitedLine(String schemaName, List<String> fieldValues) {
    SchemaMapping schemaMapping = schemaConfigProperties.getMappingDetails().get(schemaName);
    if (schemaMapping == null || schemaMapping.getSkipPolicy() == null ||
            CollectionUtils.isEmpty(schemaMapping.getSkipPolicy().getSkipRowsWithFieldValues())) {
        return false;
    }

    Map<String, FieldSkipPolicy> fieldSkipPolicyMap = schemaMapping.getSkipPolicy().getSkipRowsWithFieldValues();
    List<FieldMapping> fieldMappings = schemaMapping.getFieldMappingList();

    for (int i = 0; i < fieldMappings.size(); i++) {
        FieldMapping fieldMapping = fieldMappings.get(i);
        String fieldName = fieldMapping.getName();

        if (fieldSkipPolicyMap.containsKey(fieldName)) {
            String fieldValue = i < fieldValues.size() ? fieldValues.get(i).trim() : "";
            if (shouldSkipBasedOnField(fieldName, fieldValue, fieldSkipPolicyMap)) {
                return true;
            }
        }
    }

    return false;
}