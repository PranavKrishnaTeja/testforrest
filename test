public class SposFileUploader {

    private final S3Client s3Client;
    private final String bucketName;

    public SposFileUploader(S3Client s3Client, String bucketName) {
        this.s3Client = s3Client;
        this.bucketName = bucketName;
    }

    public void uploadFile(String keyName, InputStream inputStream, long contentLength) {
        try {
            // Initiate multipart upload
            CreateMultipartUploadRequest createMultipartUploadRequest = CreateMultipartUploadRequest.builder()
                    .bucket(bucketName)
                    .key(keyName)
                    .build();

            CreateMultipartUploadResponse response = s3Client.createMultipartUpload(createMultipartUploadRequest);
            String uploadId = response.uploadId();

            // Upload parts
            int partNumber = 1;
            List<CompletedPart> completedParts = new ArrayList<>();

            int partSize = 5 * 1024 * 1024; // 5 MB part size
            byte[] buffer = new byte[partSize];
            int bytesRead;
            long filePosition = 0;

            while (filePosition < contentLength) {
                bytesRead = inputStream.read(buffer);
                if (bytesRead <= 0) {
                    break;
                }

                UploadPartRequest uploadPartRequest = UploadPartRequest.builder()
                        .bucket(bucketName)
                        .key(keyName)
                        .uploadId(uploadId)
                        .partNumber(partNumber)
                        .contentLength((long) bytesRead)
                        .build();

                RequestBody requestBody = RequestBody.fromBytes(Arrays.copyOf(buffer, bytesRead));

                UploadPartResponse uploadPartResponse = s3Client.uploadPart(uploadPartRequest, requestBody);

                completedParts.add(CompletedPart.builder()
                        .partNumber(partNumber)
                        .eTag(uploadPartResponse.eTag())
                        .build());

                filePosition += bytesRead;
                partNumber++;
            }

            // Complete multipart upload
            CompletedMultipartUpload completedMultipartUpload = CompletedMultipartUpload.builder()
                    .parts(completedParts)
                    .build();

            CompleteMultipartUploadRequest completeMultipartUploadRequest = CompleteMultipartUploadRequest.builder()
                    .bucket(bucketName)
                    .key(keyName)
                    .uploadId(uploadId)
                    .multipartUpload(completedMultipartUpload)
                    .build();

            s3Client.completeMultipartUpload(completeMultipartUploadRequest);

            System.out.println("Upload complete!");

        } catch (S3Exception | IOException e) {
            e.printStackTrace();
            // Handle exceptions and abort multipart upload if necessary
        }
    }
}