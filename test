public void convertCsvToAvro(Conversion conversion, String sourceDirectory) throws IOException {
    Schema schema = avroSchemaGenerator.generateSchema(conversion);
    writeSchemaToSpos(schema, conversion.getAvroSchemaOutput());
    String delimiter = getDelimiter(conversion.getDelimiter());
    boolean skipFirstLine = conversion.getSkipPolicy().isSkipFirstLine();

    Map<String, FieldMapping> fieldMappings = conversion.getFieldMappingList().stream()
        .collect(Collectors.toMap(FieldMapping::getName, fm -> fm));

    GenericData genericData = new GenericData();
    genericData.addLogicalTypeConversion(new Conversions.DecimalConversion());
    genericData.addLogicalTypeConversion(new TimeConversions.DateConversion());

    String csvFileUrl = fetchLatestCsvFileFromSpos(sourceDirectory);
    InputStream csvInputStream = sposStreamingClient.streamObjectStore(csvFileUrl);
    if (csvInputStream == null) {
        throw new IOException("Could not open csv file");
    }

    // Create a temporary file
    File tempAvroFile = File.createTempFile("tempAvro", ".avro");

    // Write Avro data to the temporary file
    try (DataFileWriter<GenericRecord> dataFileWriter = new DataFileWriter<>(new GenericDatumWriter<>(schema, genericData))) {
        dataFileWriter.create(schema, tempAvroFile);

        try (BufferedReader br = new BufferedReader(new InputStreamReader(csvInputStream))) {
            String line;
            List<String> headers = null;

            if (skipFirstLine) {
                line = br.readLine();
                if (line != null) {
                    headers = Arrays.asList(line.split(delimiter, -1));
                }
            }

            if (headers == null) {
                throw new IllegalArgumentException("CSV file does not contain headers, but headers are required.");
            }

            Map<String, Integer> fieldNameToIndexMap = new HashMap<>();
            for (String fieldName : fieldMappings.keySet()) {
                int index = headers.indexOf(fieldName);
                if (index == -1) {
                    throw new IllegalArgumentException("Field '" + fieldName + "' not found in CSV headers.");
                }
                fieldNameToIndexMap.put(fieldName, index);
            }

            while ((line = br.readLine()) != null) {
                String[] values = line.split(delimiter, -1);

                GenericRecord record = new GenericData.Record(schema);

                for (Map.Entry<String, Integer> entry : fieldNameToIndexMap.entrySet()) {
                    String fieldName = entry.getKey();
                    int index = entry.getValue();
                    String csvValue = index < values.length ? values[index] : null;

                    FieldMapping fieldMapping = fieldMappings.get(fieldName);
                    Schema.Field field = schema.getField(fieldName);
                    Schema fieldSchema = field.schema();
                    Object convertedValue = convertValue(csvValue, fieldSchema, fieldMapping);
                    record.put(fieldName, convertedValue);
                }
                dataFileWriter.append(record);
            }
        }
        dataFileWriter.flush();
    } catch (Exception e) {
        throw new RuntimeException(e);
    }

    // Get the file size
    long contentLength = tempAvroFile.length();

    // Upload the file using AWS SDK
    uploadAvroFileToSposUsingAwsSdk(conversion.getTargetAvroFile(), tempAvroFile, contentLength);

    // Delete the temporary file
    tempAvroFile.delete();
}