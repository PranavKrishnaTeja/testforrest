import org.apache.avro.file.DataFileReader;
import org.apache.avro.file.DataFileStream;
import org.apache.avro.generic.GenericDatumReader;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.io.DatumReader;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;

public class AvroFileToByteArrayConverter {

    public static void main(String[] args) {
        String filePath = "path/to/your/avrofile.avro"; // Replace with the path to your Avro file
        try {
            byte[] avroBytes = convertAvroFileToByteArray(filePath);
            System.out.println("Successfully converted Avro file to byte array.");
            // Here you can do something with the avroBytes, like saving it to a file or printing it.
            // For demonstration, let's print the size of the byte array:
            System.out.println("Byte array size: " + avroBytes.length);
        } catch (IOException e) {
            System.err.println("Failed to convert Avro file to byte array: " + e.getMessage());
        }
    }

    public static byte[] convertAvroFileToByteArray(String filePath) throws IOException {
        File avroFile = new File(filePath);
        DatumReader<GenericRecord> datumReader = new GenericDatumReader<>();
        try (DataFileReader<GenericRecord> dataFileReader = new DataFileReader<>(avroFile, datumReader);
             ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {

            DataFileStream<GenericRecord> dataFileStream = new DataFileStream<>(dataFileReader, datumReader);

            // Iterate over the file and write each record to the output stream
            while (dataFileStream.hasNext()) {
                GenericRecord record = dataFileStream.next();
                dataFileStream.appendTo(outputStream); // Append each record to the output stream
            }

            return outputStream.toByteArray();
        }
    }
}