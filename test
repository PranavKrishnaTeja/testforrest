public boolean shouldSkipForDelimitedLine(String schemaName, String[] tokens) {
    SchemaMapping schemaMapping = schemaConfigProperties.getMappingDetails().get(schemaName);
    if (schemaMapping == null || schemaMapping.getSkipPolicy() == null ||
            CollectionUtils.isEmpty(schemaMapping.getSkipPolicy().getSkipRowsWithFieldValues())) {
        return false;
    }

    Map<String, FieldSkipPolicy> fieldSkipPolicyMap = schemaMapping.getSkipPolicy().getSkipRowsWithFieldValues();
    List<FieldMapping> fieldMappings = schemaMapping.getFieldMappingList();

    // Build a map of field names to their indices
    Map<String, Integer> fieldNameToIndexMap = new HashMap<>();
    for (int i = 0; i < fieldMappings.size(); i++) {
        fieldNameToIndexMap.put(fieldMappings.get(i).getName(), i);
    }

    // Only process fields involved in skip conditions
    for (Map.Entry<String, FieldSkipPolicy> entry : fieldSkipPolicyMap.entrySet()) {
        String fieldName = entry.getKey();
        FieldSkipPolicy fieldSkipPolicy = entry.getValue();

        Integer index = fieldNameToIndexMap.get(fieldName);
        if (index == null || index >= tokens.length) {
            continue; // Field not present or index out of bounds, skip
        }

        String fieldValue = tokens[index].trim();
        if (conditionMatchesForField(fieldSkipPolicy, fieldValue)) {
            return true; // Skip this line
        }
    }

    return false; // Do not skip
}