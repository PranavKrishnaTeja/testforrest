import static org.mockito.Mockito.*;

@BeforeEach
void setUp() {
    MockitoAnnotations.openMocks(this);

    when(cassandraConfig.maxConcurrentWriteRequests()).thenReturn(10);

    // Mocking Table and Columns
    AggregateFactory.Table table = mock(AggregateFactory.Table.class);
    when(table.name()).thenReturn("affiliateAccountBalance");

    AggregateFactory.Aggregate aggregate = mock(AggregateFactory.Aggregate.class);
    when(aggregate.table()).thenReturn(table);

    // Assuming that you need to mock more properties
    when(aggregate.sql()).thenReturn("INSERT INTO...");

    // Re-mock specific method to prevent NPE
    when(session.prepare(any(SimpleStatement.class))).thenReturn(mock(PreparedStatement.class));

    cassandraItemWriter = new CassandraItemWriter(session, cassandraConfig);
}

@Test
void testBuildBoundStatement() {
    AggregateFactory.Aggregate aggregate = mock(AggregateFactory.Aggregate.class);
    AggregateFactory.Table table = mock(AggregateFactory.Table.class);
    when(aggregate.table()).thenReturn(table);
    when(table.name()).thenReturn("affiliateAccountBalance");

    PreparedStatement preparedStatement = mock(PreparedStatement.class);
    BoundStatement boundStatement = mock(BoundStatement.class);

    when(session.prepare(any(SimpleStatement.class))).thenReturn(preparedStatement);
    when(preparedStatement.bind()).thenReturn(boundStatement);

    BoundStatement result = ReflectionTestUtils.invokeMethod(cassandraItemWriter, "buildBoundStatement", aggregate);

    assertNotNull(result);
}