@Test
void testWrite() {
    // Arrange
    // Create mock columns
    AggregateFactory.Metadata metadata = new AggregateFactory.Metadata(new BigDecimal("100.00"), "decimal", "column1", null, null);
    AggregateFactory.Columns column = new AggregateFactory.Columns("column1", metadata);

    // Create a mock table with one column
    AggregateFactory.Table table = new AggregateFactory.Table("test_table", List.of(column));

    // Create a mock aggregate that uses the table
    AggregateFactory.Aggregate aggregate = new AggregateFactory.Aggregate("test_aggregate", new AggregateFactory.SourceSchema("schema_name"), table, "INSERT INTO test_table (column1) VALUES (:column1)");

    // Prepare a chunk with the mock aggregate
    List<AggregateFactory.Aggregate> aggregates = List.of(aggregate);

    // Act
    cassandraItemWriter.write(new Chunk<>(aggregates));

    // Assert
    ArgumentCaptor<BoundStatement> boundStatementCaptor = ArgumentCaptor.forClass(BoundStatement.class);
    verify(session).executeAsync(boundStatementCaptor.capture());

    BoundStatement capturedStatement = boundStatementCaptor.getValue();
    assertEquals(new BigDecimal("100.00"), capturedStatement.getBigDecimal("column1"));
}